@using System.Globalization
@model DepartmentViewModel

@{
    ViewBag.Title = "Afdelingsrooster";
}

<h2>Afdelingsrooster</h2>
<h3>Week @Model.Week @Model.Year</h3>

<table class="table table-bordered table-striped">
    <thead class="text-center">
    <tr>
        <th class="text-left">Medewerker</th>
        <th class="text-left">KPU</th>

        @foreach (var day in Model.DaysOfWeek)
        {
            <th>@ISOWeek.ToDateTime(Model.Year, Model.Week, day).ToString("ddd dd-MM")</th>
        }

        <th>Totaal</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var employeeShift in Model.EmployeeShifts)
    {
        <tr>
            <td>@Html.DisplayFor(model => employeeShift.Name)</td>
            <td>@Html.DisplayFor(model => employeeShift.Kpu)</td>

            @foreach (var day in Model.DaysOfWeek)
            {
                <td>
                    @foreach (var shift in employeeShift.Shifts.Where(shift => shift.StartTime.DayOfWeek == day))
                    {
                        <span>
                            @Html.DisplayFor(model => shift.StartTime)-@Html.DisplayFor(model => shift.EndTime)
                        </span>
                        <span>
                            @Html.DisplayFor(model => shift.BreakTime)
                        </span>
                    }
                </td>
            }

            <td>
                <span class="@(employeeShift.PlannedTime > employeeShift.MaxHours ? "text-danger" : "")">
                    @($"{employeeShift.PlannedTime.TotalHours:00}:{employeeShift.PlannedTime.Minutes:00}")
                </span>
                <span> / </span>
                <span>
                    @($"{employeeShift.MaxHours.TotalHours:00}:{employeeShift.MaxHours.Minutes:00}")
                </span>
            </td>
        </tr>
    }
    </tbody>
</table>